#include <stdio.h>
#include <stdbool.h>

#define MAX_VERTICES 100  // Maximum number of vertices

bool isSafe(int graph[MAX_VERTICES][MAX_VERTICES], int color[], int v, int c, int V) {
    for (int i = 0; i < V; i++) {
        if (graph[v][i] && color[i] == c) {
            return false;  // An adjacent vertex has the same color
        }
    }
    return true;
}

bool graphColoringUtil(int graph[MAX_VERTICES][MAX_VERTICES], int m, int color[], int v, int V) {
    if (v == V) {
        return true;  // All vertices are colored
    }
    for (int i = 1; i <= m; i++) {  // Try different colors
        if (isSafe(graph, color, v, i, V)) {
            color[v] = i;  // Assign color c to vertex v

            if (graphColoringUtil(graph, m, color, v + 1, V)) {
                return true;
            }
            color[v] = 0;  // Remove assigned color
        }
    }
    return false;  // No valid coloring found
}

bool graphColoring(int graph[MAX_VERTICES][MAX_VERTICES], int m, int V) {
    int color[MAX_VERTICES];  // Array to store color assignments
    for (int i = 0; i < V; i++) {
        color[i] = 0;  // Initialize all vertices as uncolored
    }

    if (graphColoringUtil(graph, m, color, 0, V) == false) {
        printf("Solution does not exist\n");
        return false;
    }
    printf("Solution exists: Following are the assigned colors:\n");
    for (int i = 0; i < V; i++) {
        printf("Vertex %d ---> Color %d\n", i, color[i]);
    }
    return true;
}

int main() {
    int V, E;  // V is the number of vertices, E is the number of edges
    int graph[MAX_VERTICES][MAX_VERTICES] = {0}; // Initialize adjacency matrix with 0

    printf("Enter the number of vertices: ");
    scanf("%d", &V);

    printf("Enter the number of edges: ");
    scanf("%d", &E);

    printf("Enter the edges (format: u v):\n");
    for (int i = 0; i < E; i++) {
        int u, v; // Variables to store edge endpoints
        scanf("%d %d", &u, &v);
        graph[u][v] = 1; // Set edge u -> v
        graph[v][u] = 1; // Set edge v -> u (for undirected graph)
    }
    int m;
    printf("Enter the number of colors: ");
    scanf("%d", &m);

    graphColoring(graph, m, V);

    return 0;
}
